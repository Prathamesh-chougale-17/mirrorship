name: Sync Platform Data

on:
  # Run every 6 hours
  schedule:
    - cron: '0 */6 * * *'  # At minute 0 past every 6th hour
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force sync all users'
        required: false
        default: false
        type: boolean

jobs:
  sync-data:
    name: Sync GitHub and LeetCode Data
    runs-on: ubuntu-latest
    
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # No need to setup Node.js or install dependencies 
      # since we're just making HTTP calls to the API

      - name: Setup environment
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          ADMIN_API_KEY: ${{ secrets.ADMIN_API_KEY }}
        run: |
          # Set default if API_BASE_URL is not set
          if [ -z "$API_BASE_URL" ]; then
            API_BASE_URL="https://your-app-domain.com"
          fi
          echo "API_BASE_URL=$API_BASE_URL" >> $GITHUB_ENV
          echo "ADMIN_API_KEY=$ADMIN_API_KEY" >> $GITHUB_ENV

      - name: Call batch sync API
        run: |
          echo "üîÑ Starting batch sync..."
          
          # Call the batch sync API endpoint
          RESPONSE=$(curl -X POST "$API_BASE_URL/api/sync/batch" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $ADMIN_API_KEY" \
            -d '{"syncAll": true}' \
            -w "HTTP_STATUS:%{http_code}" \
            -s --show-error)
          
          # Extract HTTP status and response body
          HTTP_STATUS=$(echo "$RESPONSE" | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
          RESPONSE_BODY=$(echo "$RESPONSE" | sed 's/HTTP_STATUS:[0-9]*$//')
          
          echo "HTTP Status: $HTTP_STATUS"
          echo "Response: $RESPONSE_BODY"
          
          # Check if the request was successful
          if [[ "$HTTP_STATUS" -eq 200 ]]; then
            echo "‚úÖ Batch sync completed successfully!"
          else
            echo "‚ùå Batch sync failed with status $HTTP_STATUS"
            echo "$RESPONSE_BODY"
            exit 1
          fi
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          ADMIN_API_KEY: ${{ secrets.ADMIN_API_KEY }}

      - name: Report success
        if: success()
        run: |
          echo "‚úÖ Data sync completed successfully at $(date)"
          
      - name: Report failure
        if: failure()
        run: |
          echo "‚ùå Data sync failed at $(date)"
          # You can add Slack/Discord notifications here if needed

      - name: Send notification on failure (optional)
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # Optional: Add Slack webhook for notifications